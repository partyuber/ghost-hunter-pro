{"dependencies":[{"name":"./DeviceSensor","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"qGIUuPac1yxRtbqmmOkwhGpz/24=","exportNames":["*"],"imports":1}},{"name":"./ExponentGyroscope","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":52,"index":95}}],"key":"uKbeRDsFke4PJkrPeZFgQ4lid5o=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"GyroscopeSensor\", {\n    enumerable: true,\n    get: function () {\n      return GyroscopeSensor;\n    }\n  });\n  var _DeviceSensor = require(_dependencyMap[0], \"./DeviceSensor\");\n  var DeviceSensor = _interopDefault(_DeviceSensor);\n  var _ExponentGyroscope = require(_dependencyMap[1], \"./ExponentGyroscope\");\n  var ExponentGyroscope = _interopDefault(_ExponentGyroscope);\n  class GyroscopeSensor extends DeviceSensor.default {\n    /**\n     * > **info** You should always check the sensor availability before attempting to use it.\n     *\n     * Returns whether the gyroscope is enabled on the device.\n     *\n     * On mobile web, you must first invoke `Gyroscope.requestPermissionsAsync()` in a user interaction (i.e. touch event) before you can use this module.\n     * If the `status` is not equal to `granted` then you should inform the end user that they may have to open settings.\n     *\n     * On **web** this starts a timer and waits to see if an event is fired. This should predict if the iOS device has the **device orientation** API disabled in\n     * **Settings > Safari > Motion & Orientation Access**. Some devices will also not fire if the site isn't hosted with **HTTPS** as `DeviceMotion` is now considered a secure API.\n     * There is no formal API for detecting the status of `DeviceMotion` so this API can sometimes be unreliable on web.\n     *\n     * @return A promise that resolves to a `boolean` denoting the availability of the gyroscope.\n     */\n    async isAvailableAsync() {\n      return super.isAvailableAsync();\n    }\n    /**\n     * Subscribe for updates to the gyroscope.\n     *\n     * @param listener A callback that is invoked when a gyroscope update is available. When invoked,\n     * the listener is provided a single argument that is an `GyroscopeMeasurement` object.\n     *\n     * @return A subscription that you can call `remove()` on when you would like to unsubscribe the listener.\n     */\n    addListener(listener) {\n      return super.addListener(listener);\n    }\n  }\n  var _default = new GyroscopeSensor(ExponentGyroscope.default, 'gyroscopeDidUpdate');\n});","lineCount":59,"map":[[12,2,33,0,"Object"],[12,8,33,0],[12,9,33,0,"defineProperty"],[12,23,33,0],[12,24,33,0,"exports"],[12,31,33,0],[13,4,33,0,"enumerable"],[13,14,33,0],[14,4,33,0,"get"],[14,7,33,0],[14,18,33,0,"get"],[14,19,33,0],[15,6,33,0],[15,13,33,0,"_default"],[15,21,33,0],[16,4,33,0],[17,2,33,0],[18,2,3,0,"Object"],[18,8,3,0],[18,9,3,0,"defineProperty"],[18,23,3,0],[18,24,3,0,"exports"],[18,31,3,0],[19,4,3,0,"enumerable"],[19,14,3,0],[20,4,3,0,"get"],[20,7,3,0],[20,18,3,0,"get"],[20,19,3,0],[21,6,3,0],[21,13,3,0,"GyroscopeSensor"],[21,28,3,0],[22,4,3,0],[23,2,3,0],[24,2,1,0],[24,6,1,0,"_DeviceSensor"],[24,19,1,0],[24,22,1,0,"require"],[24,29,1,0],[24,30,1,0,"_dependencyMap"],[24,44,1,0],[25,2,1,0],[25,6,1,0,"DeviceSensor"],[25,18,1,0],[25,21,1,0,"_interopDefault"],[25,36,1,0],[25,37,1,0,"_DeviceSensor"],[25,50,1,0],[26,2,2,0],[26,6,2,0,"_ExponentGyroscope"],[26,24,2,0],[26,27,2,0,"require"],[26,34,2,0],[26,35,2,0,"_dependencyMap"],[26,49,2,0],[27,2,2,0],[27,6,2,0,"ExponentGyroscope"],[27,23,2,0],[27,26,2,0,"_interopDefault"],[27,41,2,0],[27,42,2,0,"_ExponentGyroscope"],[27,60,2,0],[28,2,3,7],[28,8,3,13,"GyroscopeSensor"],[28,23,3,28],[28,32,3,37,"DeviceSensor"],[28,44,3,49],[28,45,3,49,"default"],[28,52,3,49],[28,53,3,50],[29,4,4,4],[30,0,5,0],[31,0,6,0],[32,0,7,0],[33,0,8,0],[34,0,9,0],[35,0,10,0],[36,0,11,0],[37,0,12,0],[38,0,13,0],[39,0,14,0],[40,0,15,0],[41,0,16,0],[42,0,17,0],[43,4,18,4],[43,10,18,10,"isAvailableAsync"],[43,26,18,26,"isAvailableAsync"],[43,27,18,26],[43,29,18,29],[44,6,19,8],[44,13,19,15],[44,18,19,20],[44,19,19,21,"isAvailableAsync"],[44,35,19,37],[44,36,19,38],[44,37,19,39],[45,4,20,4],[46,4,21,4],[47,0,22,0],[48,0,23,0],[49,0,24,0],[50,0,25,0],[51,0,26,0],[52,0,27,0],[53,0,28,0],[54,4,29,4,"addListener"],[54,15,29,15,"addListener"],[54,16,29,16,"listener"],[54,24,29,24],[54,26,29,26],[55,6,30,8],[55,13,30,15],[55,18,30,20],[55,19,30,21,"addListener"],[55,30,30,32],[55,31,30,33,"listener"],[55,39,30,41],[55,40,30,42],[56,4,31,4],[57,2,32,0],[58,2,33,0],[58,6,33,0,"_default"],[58,14,33,0],[58,17,33,15],[58,21,33,19,"GyroscopeSensor"],[58,36,33,34],[58,37,33,35,"ExponentGyroscope"],[58,54,33,52],[58,55,33,52,"default"],[58,62,33,52],[58,64,33,54],[58,84,33,74],[58,85,33,75],[59,0,33,76],[59,3]],"functionMap":{"names":["<global>","GyroscopeSensor","GyroscopeSensor#isAvailableAsync","GyroscopeSensor#addListener"],"mappings":"AAA;OCE;ICe;KDE;IES;KFE;CDC"},"hasCjsExports":false},"type":"js/module"}]}