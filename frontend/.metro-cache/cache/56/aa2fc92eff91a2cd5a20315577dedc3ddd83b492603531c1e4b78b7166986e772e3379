{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return DeviceSensor;\n    }\n  });\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionStatus;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _expoModulesCore = require(_dependencyMap[3], \"expo-modules-core\");\n  /**\n   * A base class for subscribable sensors. The events emitted by this class are measurements\n   * specified by the parameter type `Measurement`.\n   */\n  var DeviceSensor = /*#__PURE__*/function () {\n    function DeviceSensor(nativeSensorModule, nativeEventName) {\n      (0, _classCallCheck.default)(this, DeviceSensor);\n      this._nativeModule = nativeSensorModule;\n      this._nativeEventName = nativeEventName;\n    }\n    return (0, _createClass.default)(DeviceSensor, [{\n      key: \"addListener\",\n      value: function addListener(listener) {\n        return this._nativeModule.addListener(this._nativeEventName, listener);\n      }\n      /**\n       * Returns boolean which signifies if sensor has any listeners registered.\n       */\n    }, {\n      key: \"hasListeners\",\n      value: function hasListeners() {\n        return this._nativeModule.listenerCount(this._nativeEventName) > 0;\n      }\n      /**\n       * Returns the registered listeners count.\n       */\n    }, {\n      key: \"getListenerCount\",\n      value: function getListenerCount() {\n        return this._nativeModule.listenerCount(this._nativeEventName);\n      }\n      /**\n       * Removes all registered listeners.\n       */\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners() {\n        this._nativeModule.removeAllListeners(this._nativeEventName);\n      }\n      /**\n       * Removes the given subscription.\n       * @param subscription A subscription to remove.\n       */\n    }, {\n      key: \"removeSubscription\",\n      value: function removeSubscription(subscription) {\n        subscription.remove();\n      }\n      /**\n       * Set the sensor update interval.\n       *\n       * @param intervalMs Desired interval in milliseconds between sensor updates.\n       * > Starting from Android 12 (API level 31), the system has a 200ms limit for each sensor updates.\n       * >\n       * > If you need an update interval less than 200ms, you should:\n       * > * add `android.permission.HIGH_SAMPLING_RATE_SENSORS` to [**app.json** `permissions` field](/versions/latest/config/app/#permissions)\n       * > * or if you are using bare workflow, add `<uses-permission android:name=\"android.permission.HIGH_SAMPLING_RATE_SENSORS\"/>` to **AndroidManifest.xml**.\n       */\n    }, {\n      key: \"setUpdateInterval\",\n      value: function setUpdateInterval(intervalMs) {\n        if (!this._nativeModule.setUpdateInterval) {\n          console.warn(`expo-sensors: setUpdateInterval() is not supported on ${_expoModulesCore.Platform.OS}`);\n        } else {\n          this._nativeModule.setUpdateInterval(intervalMs);\n        }\n      }\n      /**\n       * > **info** You should always check the sensor availability before attempting to use it.\n       * @return A promise that resolves to a `boolean` denoting the availability of the sensor.\n       */\n    }, {\n      key: \"isAvailableAsync\",\n      value: (function () {\n        var _isAvailableAsync = (0, _asyncToGenerator.default)(function* () {\n          if (!this._nativeModule.isAvailableAsync) {\n            return false;\n          } else {\n            return yield this._nativeModule.isAvailableAsync();\n          }\n        });\n        function isAvailableAsync() {\n          return _isAvailableAsync.apply(this, arguments);\n        }\n        return isAvailableAsync;\n      }()\n      /**\n       * Checks user's permissions for accessing sensor.\n       */\n      )\n    }, {\n      key: \"getPermissionsAsync\",\n      value: (function () {\n        var _getPermissionsAsync = (0, _asyncToGenerator.default)(function* () {\n          if (!this._nativeModule.getPermissionsAsync) {\n            return defaultPermissionsResponse;\n          } else {\n            return yield this._nativeModule.getPermissionsAsync();\n          }\n        });\n        function getPermissionsAsync() {\n          return _getPermissionsAsync.apply(this, arguments);\n        }\n        return getPermissionsAsync;\n      }()\n      /**\n       * Asks the user to grant permissions for accessing sensor.\n       */\n      )\n    }, {\n      key: \"requestPermissionsAsync\",\n      value: (function () {\n        var _requestPermissionsAsync = (0, _asyncToGenerator.default)(function* () {\n          if (!this._nativeModule.requestPermissionsAsync) {\n            return defaultPermissionsResponse;\n          } else {\n            return yield this._nativeModule.requestPermissionsAsync();\n          }\n        });\n        function requestPermissionsAsync() {\n          return _requestPermissionsAsync.apply(this, arguments);\n        }\n        return requestPermissionsAsync;\n      }())\n    }]);\n  }();\n  var defaultPermissionsResponse = {\n    granted: true,\n    expires: 'never',\n    canAskAgain: true,\n    status: _expoModulesCore.PermissionStatus.GRANTED\n  };\n});","lineCount":163,"map":[[15,13,6,21,"DeviceSensor"],[15,25,6,33],[16,4,6,33],[17,2,6,33],[18,2,100,0,"Object"],[18,8,100,0],[18,9,100,0,"defineProperty"],[18,23,100,0],[18,24,100,0,"exports"],[18,31,100,0],[19,4,100,0,"enumerable"],[19,14,100,0],[20,4,100,0,"get"],[20,7,100,0],[20,18,100,0,"get"],[20,19,100,0],[21,6,100,0],[21,13,100,9,"PermissionStatus"],[21,29,100,25],[21,30,100,25,"PermissionStatus"],[21,46,100,25],[22,4,100,25],[23,2,100,25],[24,2,100,28],[24,6,100,28,"_babelRuntimeHelpersAsyncToGenerator"],[24,42,100,28],[24,45,100,28,"require"],[24,52,100,28],[24,53,100,28,"_dependencyMap"],[24,67,100,28],[25,2,100,28],[25,6,100,28,"_asyncToGenerator"],[25,23,100,28],[25,26,100,28,"_interopDefault"],[25,41,100,28],[25,42,100,28,"_babelRuntimeHelpersAsyncToGenerator"],[25,78,100,28],[26,2,100,28],[26,6,100,28,"_babelRuntimeHelpersClassCallCheck"],[26,40,100,28],[26,43,100,28,"require"],[26,50,100,28],[26,51,100,28,"_dependencyMap"],[26,65,100,28],[27,2,100,28],[27,6,100,28,"_classCallCheck"],[27,21,100,28],[27,24,100,28,"_interopDefault"],[27,39,100,28],[27,40,100,28,"_babelRuntimeHelpersClassCallCheck"],[27,74,100,28],[28,2,100,28],[28,6,100,28,"_babelRuntimeHelpersCreateClass"],[28,37,100,28],[28,40,100,28,"require"],[28,47,100,28],[28,48,100,28,"_dependencyMap"],[28,62,100,28],[29,2,100,28],[29,6,100,28,"_createClass"],[29,18,100,28],[29,21,100,28,"_interopDefault"],[29,36,100,28],[29,37,100,28,"_babelRuntimeHelpersCreateClass"],[29,68,100,28],[30,2,1,0],[30,6,1,0,"_expoModulesCore"],[30,22,1,0],[30,25,1,0,"require"],[30,32,1,0],[30,33,1,0,"_dependencyMap"],[30,47,1,0],[31,2,2,0],[32,0,3,0],[33,0,4,0],[34,0,5,0],[35,2,2,0],[35,6,6,21,"DeviceSensor"],[35,18,6,33],[36,4,9,4],[36,13,9,4,"DeviceSensor"],[36,26,9,16,"nativeSensorModule"],[36,44,9,34],[36,46,9,36,"nativeEventName"],[36,61,9,51],[36,63,9,53],[37,6,9,53],[37,10,9,53,"_classCallCheck"],[37,25,9,53],[37,26,9,53,"default"],[37,33,9,53],[37,41,9,53,"DeviceSensor"],[37,53,9,53],[38,6,10,8],[38,10,10,12],[38,11,10,13,"_nativeModule"],[38,24,10,26],[38,27,10,29,"nativeSensorModule"],[38,45,10,47],[39,6,11,8],[39,10,11,12],[39,11,11,13,"_nativeEventName"],[39,27,11,29],[39,30,11,32,"nativeEventName"],[39,45,11,47],[40,4,12,4],[41,4,12,5],[41,15,12,5,"_createClass"],[41,27,12,5],[41,28,12,5,"default"],[41,35,12,5],[41,37,12,5,"DeviceSensor"],[41,49,12,5],[42,6,12,5,"key"],[42,9,12,5],[43,6,12,5,"value"],[43,11,12,5],[43,13,13,4],[43,22,13,4,"addListener"],[43,33,13,15,"addListener"],[43,34,13,16,"listener"],[43,42,13,24],[43,44,13,26],[44,8,14,8],[44,15,14,15],[44,19,14,19],[44,20,14,20,"_nativeModule"],[44,33,14,33],[44,34,14,34,"addListener"],[44,45,14,45],[44,46,14,46],[44,50,14,50],[44,51,14,51,"_nativeEventName"],[44,67,14,67],[44,69,14,69,"listener"],[44,77,14,77],[44,78,14,78],[45,6,15,4],[46,6,16,4],[47,0,17,0],[48,0,18,0],[49,4,16,4],[50,6,16,4,"key"],[50,9,16,4],[51,6,16,4,"value"],[51,11,16,4],[51,13,19,4],[51,22,19,4,"hasListeners"],[51,34,19,16,"hasListeners"],[51,35,19,16],[51,37,19,19],[52,8,20,8],[52,15,20,15],[52,19,20,19],[52,20,20,20,"_nativeModule"],[52,33,20,33],[52,34,20,34,"listenerCount"],[52,47,20,47],[52,48,20,48],[52,52,20,52],[52,53,20,53,"_nativeEventName"],[52,69,20,69],[52,70,20,70],[52,73,20,73],[52,74,20,74],[53,6,21,4],[54,6,22,4],[55,0,23,0],[56,0,24,0],[57,4,22,4],[58,6,22,4,"key"],[58,9,22,4],[59,6,22,4,"value"],[59,11,22,4],[59,13,25,4],[59,22,25,4,"getListenerCount"],[59,38,25,20,"getListenerCount"],[59,39,25,20],[59,41,25,23],[60,8,26,8],[60,15,26,15],[60,19,26,19],[60,20,26,20,"_nativeModule"],[60,33,26,33],[60,34,26,34,"listenerCount"],[60,47,26,47],[60,48,26,48],[60,52,26,52],[60,53,26,53,"_nativeEventName"],[60,69,26,69],[60,70,26,70],[61,6,27,4],[62,6,28,4],[63,0,29,0],[64,0,30,0],[65,4,28,4],[66,6,28,4,"key"],[66,9,28,4],[67,6,28,4,"value"],[67,11,28,4],[67,13,31,4],[67,22,31,4,"removeAllListeners"],[67,40,31,22,"removeAllListeners"],[67,41,31,22],[67,43,31,25],[68,8,32,8],[68,12,32,12],[68,13,32,13,"_nativeModule"],[68,26,32,26],[68,27,32,27,"removeAllListeners"],[68,45,32,45],[68,46,32,46],[68,50,32,50],[68,51,32,51,"_nativeEventName"],[68,67,32,67],[68,68,32,68],[69,6,33,4],[70,6,34,4],[71,0,35,0],[72,0,36,0],[73,0,37,0],[74,4,34,4],[75,6,34,4,"key"],[75,9,34,4],[76,6,34,4,"value"],[76,11,34,4],[76,13,38,4],[76,22,38,4,"removeSubscription"],[76,40,38,22,"removeSubscription"],[76,41,38,23,"subscription"],[76,53,38,35],[76,55,38,37],[77,8,39,8,"subscription"],[77,20,39,20],[77,21,39,21,"remove"],[77,27,39,27],[77,28,39,28],[77,29,39,29],[78,6,40,4],[79,6,41,4],[80,0,42,0],[81,0,43,0],[82,0,44,0],[83,0,45,0],[84,0,46,0],[85,0,47,0],[86,0,48,0],[87,0,49,0],[88,0,50,0],[89,4,41,4],[90,6,41,4,"key"],[90,9,41,4],[91,6,41,4,"value"],[91,11,41,4],[91,13,51,4],[91,22,51,4,"setUpdateInterval"],[91,39,51,21,"setUpdateInterval"],[91,40,51,22,"intervalMs"],[91,50,51,32],[91,52,51,34],[92,8,52,8],[92,12,52,12],[92,13,52,13],[92,17,52,17],[92,18,52,18,"_nativeModule"],[92,31,52,31],[92,32,52,32,"setUpdateInterval"],[92,49,52,49],[92,51,52,51],[93,10,53,12,"console"],[93,17,53,19],[93,18,53,20,"warn"],[93,22,53,24],[93,23,53,25],[93,80,53,82,"Platform"],[93,96,53,90],[93,97,53,90,"Platform"],[93,105,53,90],[93,106,53,91,"OS"],[93,108,53,93],[93,110,53,95],[93,111,53,96],[94,8,54,8],[94,9,54,9],[94,15,55,13],[95,10,56,12],[95,14,56,16],[95,15,56,17,"_nativeModule"],[95,28,56,30],[95,29,56,31,"setUpdateInterval"],[95,46,56,48],[95,47,56,49,"intervalMs"],[95,57,56,59],[95,58,56,60],[96,8,57,8],[97,6,58,4],[98,6,59,4],[99,0,60,0],[100,0,61,0],[101,0,62,0],[102,4,59,4],[103,6,59,4,"key"],[103,9,59,4],[104,6,59,4,"value"],[104,11,59,4],[105,8,59,4],[105,12,59,4,"_isAvailableAsync"],[105,29,59,4],[105,36,59,4,"_asyncToGenerator"],[105,53,59,4],[105,54,59,4,"default"],[105,61,59,4],[105,63,63,4],[105,76,63,29],[106,10,64,8],[106,14,64,12],[106,15,64,13],[106,19,64,17],[106,20,64,18,"_nativeModule"],[106,33,64,31],[106,34,64,32,"isAvailableAsync"],[106,50,64,48],[106,52,64,50],[107,12,65,12],[107,19,65,19],[107,24,65,24],[108,10,66,8],[108,11,66,9],[108,17,67,13],[109,12,68,12],[109,25,68,25],[109,29,68,29],[109,30,68,30,"_nativeModule"],[109,43,68,43],[109,44,68,44,"isAvailableAsync"],[109,60,68,60],[109,61,68,61],[109,62,68,62],[110,10,69,8],[111,8,70,4],[111,9,70,5],[112,8,70,5],[112,17,63,10,"isAvailableAsync"],[112,33,63,26,"isAvailableAsync"],[112,34,63,26],[113,10,63,26],[113,17,63,26,"_isAvailableAsync"],[113,34,63,26],[113,35,63,26,"apply"],[113,40,63,26],[113,47,63,26,"arguments"],[113,56,63,26],[114,8,63,26],[115,8,63,26],[115,15,63,10,"isAvailableAsync"],[115,31,63,26],[116,6,63,26],[117,6,71,4],[118,0,72,0],[119,0,73,0],[120,6,71,4],[121,4,71,4],[122,6,71,4,"key"],[122,9,71,4],[123,6,71,4,"value"],[123,11,71,4],[124,8,71,4],[124,12,71,4,"_getPermissionsAsync"],[124,32,71,4],[124,39,71,4,"_asyncToGenerator"],[124,56,71,4],[124,57,71,4,"default"],[124,64,71,4],[124,66,74,4],[124,79,74,32],[125,10,75,8],[125,14,75,12],[125,15,75,13],[125,19,75,17],[125,20,75,18,"_nativeModule"],[125,33,75,31],[125,34,75,32,"getPermissionsAsync"],[125,53,75,51],[125,55,75,53],[126,12,76,12],[126,19,76,19,"defaultPermissionsResponse"],[126,45,76,45],[127,10,77,8],[127,11,77,9],[127,17,78,13],[128,12,79,12],[128,25,79,25],[128,29,79,29],[128,30,79,30,"_nativeModule"],[128,43,79,43],[128,44,79,44,"getPermissionsAsync"],[128,63,79,63],[128,64,79,64],[128,65,79,65],[129,10,80,8],[130,8,81,4],[130,9,81,5],[131,8,81,5],[131,17,74,10,"getPermissionsAsync"],[131,36,74,29,"getPermissionsAsync"],[131,37,74,29],[132,10,74,29],[132,17,74,29,"_getPermissionsAsync"],[132,37,74,29],[132,38,74,29,"apply"],[132,43,74,29],[132,50,74,29,"arguments"],[132,59,74,29],[133,8,74,29],[134,8,74,29],[134,15,74,10,"getPermissionsAsync"],[134,34,74,29],[135,6,74,29],[136,6,82,4],[137,0,83,0],[138,0,84,0],[139,6,82,4],[140,4,82,4],[141,6,82,4,"key"],[141,9,82,4],[142,6,82,4,"value"],[142,11,82,4],[143,8,82,4],[143,12,82,4,"_requestPermissionsAsync"],[143,36,82,4],[143,43,82,4,"_asyncToGenerator"],[143,60,82,4],[143,61,82,4,"default"],[143,68,82,4],[143,70,85,4],[143,83,85,36],[144,10,86,8],[144,14,86,12],[144,15,86,13],[144,19,86,17],[144,20,86,18,"_nativeModule"],[144,33,86,31],[144,34,86,32,"requestPermissionsAsync"],[144,57,86,55],[144,59,86,57],[145,12,87,12],[145,19,87,19,"defaultPermissionsResponse"],[145,45,87,45],[146,10,88,8],[146,11,88,9],[146,17,89,13],[147,12,90,12],[147,25,90,25],[147,29,90,29],[147,30,90,30,"_nativeModule"],[147,43,90,43],[147,44,90,44,"requestPermissionsAsync"],[147,67,90,67],[147,68,90,68],[147,69,90,69],[148,10,91,8],[149,8,92,4],[149,9,92,5],[150,8,92,5],[150,17,85,10,"requestPermissionsAsync"],[150,40,85,33,"requestPermissionsAsync"],[150,41,85,33],[151,10,85,33],[151,17,85,33,"_requestPermissionsAsync"],[151,41,85,33],[151,42,85,33,"apply"],[151,47,85,33],[151,54,85,33,"arguments"],[151,63,85,33],[152,8,85,33],[153,8,85,33],[153,15,85,10,"requestPermissionsAsync"],[153,38,85,33],[154,6,85,33],[155,4,85,33],[156,2,85,33],[157,2,94,0],[157,6,94,6,"defaultPermissionsResponse"],[157,32,94,32],[157,35,94,35],[158,4,95,4,"granted"],[158,11,95,11],[158,13,95,13],[158,17,95,17],[159,4,96,4,"expires"],[159,11,96,11],[159,13,96,13],[159,20,96,20],[160,4,97,4,"canAskAgain"],[160,15,97,15],[160,17,97,17],[160,21,97,21],[161,4,98,4,"status"],[161,10,98,10],[161,12,98,12,"PermissionStatus"],[161,28,98,28],[161,29,98,28,"PermissionStatus"],[161,45,98,28],[161,46,98,29,"GRANTED"],[162,2,99,0],[162,3,99,1],[163,0,99,2],[163,3]],"functionMap":{"names":["<global>","DeviceSensor","constructor","addListener","hasListeners","getListenerCount","removeAllListeners","removeSubscription","setUpdateInterval","isAvailableAsync","getPermissionsAsync","requestPermissionsAsync"],"mappings":"AAA;eCK;ICG;KDG;IEC;KFE;IGI;KHE;III;KJE;IKI;KLE;IMK;KNE;IOW;KPO;IQK;KRO;ISI;KTO;IUI;KVO;CDC"},"hasCjsExports":false},"type":"js/module"}]}