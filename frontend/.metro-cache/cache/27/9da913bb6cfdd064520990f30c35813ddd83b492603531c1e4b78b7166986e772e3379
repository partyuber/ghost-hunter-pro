{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return DeviceSensor;\n    }\n  });\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionStatus;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  /**\n   * A base class for subscribable sensors. The events emitted by this class are measurements\n   * specified by the parameter type `Measurement`.\n   */\n  class DeviceSensor {\n    constructor(nativeSensorModule, nativeEventName) {\n      this._nativeModule = nativeSensorModule;\n      this._nativeEventName = nativeEventName;\n    }\n    addListener(listener) {\n      return this._nativeModule.addListener(this._nativeEventName, listener);\n    }\n    /**\n     * Returns boolean which signifies if sensor has any listeners registered.\n     */\n    hasListeners() {\n      return this._nativeModule.listenerCount(this._nativeEventName) > 0;\n    }\n    /**\n     * Returns the registered listeners count.\n     */\n    getListenerCount() {\n      return this._nativeModule.listenerCount(this._nativeEventName);\n    }\n    /**\n     * Removes all registered listeners.\n     */\n    removeAllListeners() {\n      this._nativeModule.removeAllListeners(this._nativeEventName);\n    }\n    /**\n     * Removes the given subscription.\n     * @param subscription A subscription to remove.\n     */\n    removeSubscription(subscription) {\n      subscription.remove();\n    }\n    /**\n     * Set the sensor update interval.\n     *\n     * @param intervalMs Desired interval in milliseconds between sensor updates.\n     * > Starting from Android 12 (API level 31), the system has a 200ms limit for each sensor updates.\n     * >\n     * > If you need an update interval less than 200ms, you should:\n     * > * add `android.permission.HIGH_SAMPLING_RATE_SENSORS` to [**app.json** `permissions` field](/versions/latest/config/app/#permissions)\n     * > * or if you are using bare workflow, add `<uses-permission android:name=\"android.permission.HIGH_SAMPLING_RATE_SENSORS\"/>` to **AndroidManifest.xml**.\n     */\n    setUpdateInterval(intervalMs) {\n      if (!this._nativeModule.setUpdateInterval) {\n        console.warn(`expo-sensors: setUpdateInterval() is not supported on ${_expoModulesCore.Platform.OS}`);\n      } else {\n        this._nativeModule.setUpdateInterval(intervalMs);\n      }\n    }\n    /**\n     * > **info** You should always check the sensor availability before attempting to use it.\n     * @return A promise that resolves to a `boolean` denoting the availability of the sensor.\n     */\n    async isAvailableAsync() {\n      if (!this._nativeModule.isAvailableAsync) {\n        return false;\n      } else {\n        return await this._nativeModule.isAvailableAsync();\n      }\n    }\n    /**\n     * Checks user's permissions for accessing sensor.\n     */\n    async getPermissionsAsync() {\n      if (!this._nativeModule.getPermissionsAsync) {\n        return defaultPermissionsResponse;\n      } else {\n        return await this._nativeModule.getPermissionsAsync();\n      }\n    }\n    /**\n     * Asks the user to grant permissions for accessing sensor.\n     */\n    async requestPermissionsAsync() {\n      if (!this._nativeModule.requestPermissionsAsync) {\n        return defaultPermissionsResponse;\n      } else {\n        return await this._nativeModule.requestPermissionsAsync();\n      }\n    }\n  }\n  const defaultPermissionsResponse = {\n    granted: true,\n    expires: 'never',\n    canAskAgain: true,\n    status: _expoModulesCore.PermissionStatus.GRANTED\n  };\n});","lineCount":112,"map":[[7,2,6,15,"Object"],[7,8,6,15],[7,9,6,15,"defineProperty"],[7,23,6,15],[7,24,6,15,"exports"],[7,31,6,15],[8,4,6,15,"enumerable"],[8,14,6,15],[9,4,6,15,"get"],[9,7,6,15],[9,18,6,15,"get"],[9,19,6,15],[10,6,6,15],[10,13,6,15,"DeviceSensor"],[10,25,6,15],[11,4,6,15],[12,2,6,15],[13,2,100,0,"Object"],[13,8,100,0],[13,9,100,0,"defineProperty"],[13,23,100,0],[13,24,100,0,"exports"],[13,31,100,0],[14,4,100,0,"enumerable"],[14,14,100,0],[15,4,100,0,"get"],[15,7,100,0],[15,18,100,0,"get"],[15,19,100,0],[16,6,100,0],[16,13,100,9,"PermissionStatus"],[16,29,100,25],[16,30,100,25,"PermissionStatus"],[16,46,100,25],[17,4,100,25],[18,2,100,25],[19,2,1,0],[19,6,1,0,"_expoModulesCore"],[19,22,1,0],[19,25,1,0,"require"],[19,32,1,0],[19,33,1,0,"_dependencyMap"],[19,47,1,0],[20,2,2,0],[21,0,3,0],[22,0,4,0],[23,0,5,0],[24,2,6,15],[24,8,6,21,"DeviceSensor"],[24,20,6,33],[24,21,6,34],[25,4,9,4,"constructor"],[25,15,9,15,"constructor"],[25,16,9,16,"nativeSensorModule"],[25,34,9,34],[25,36,9,36,"nativeEventName"],[25,51,9,51],[25,53,9,53],[26,6,10,8],[26,10,10,12],[26,11,10,13,"_nativeModule"],[26,24,10,26],[26,27,10,29,"nativeSensorModule"],[26,45,10,47],[27,6,11,8],[27,10,11,12],[27,11,11,13,"_nativeEventName"],[27,27,11,29],[27,30,11,32,"nativeEventName"],[27,45,11,47],[28,4,12,4],[29,4,13,4,"addListener"],[29,15,13,15,"addListener"],[29,16,13,16,"listener"],[29,24,13,24],[29,26,13,26],[30,6,14,8],[30,13,14,15],[30,17,14,19],[30,18,14,20,"_nativeModule"],[30,31,14,33],[30,32,14,34,"addListener"],[30,43,14,45],[30,44,14,46],[30,48,14,50],[30,49,14,51,"_nativeEventName"],[30,65,14,67],[30,67,14,69,"listener"],[30,75,14,77],[30,76,14,78],[31,4,15,4],[32,4,16,4],[33,0,17,0],[34,0,18,0],[35,4,19,4,"hasListeners"],[35,16,19,16,"hasListeners"],[35,17,19,16],[35,19,19,19],[36,6,20,8],[36,13,20,15],[36,17,20,19],[36,18,20,20,"_nativeModule"],[36,31,20,33],[36,32,20,34,"listenerCount"],[36,45,20,47],[36,46,20,48],[36,50,20,52],[36,51,20,53,"_nativeEventName"],[36,67,20,69],[36,68,20,70],[36,71,20,73],[36,72,20,74],[37,4,21,4],[38,4,22,4],[39,0,23,0],[40,0,24,0],[41,4,25,4,"getListenerCount"],[41,20,25,20,"getListenerCount"],[41,21,25,20],[41,23,25,23],[42,6,26,8],[42,13,26,15],[42,17,26,19],[42,18,26,20,"_nativeModule"],[42,31,26,33],[42,32,26,34,"listenerCount"],[42,45,26,47],[42,46,26,48],[42,50,26,52],[42,51,26,53,"_nativeEventName"],[42,67,26,69],[42,68,26,70],[43,4,27,4],[44,4,28,4],[45,0,29,0],[46,0,30,0],[47,4,31,4,"removeAllListeners"],[47,22,31,22,"removeAllListeners"],[47,23,31,22],[47,25,31,25],[48,6,32,8],[48,10,32,12],[48,11,32,13,"_nativeModule"],[48,24,32,26],[48,25,32,27,"removeAllListeners"],[48,43,32,45],[48,44,32,46],[48,48,32,50],[48,49,32,51,"_nativeEventName"],[48,65,32,67],[48,66,32,68],[49,4,33,4],[50,4,34,4],[51,0,35,0],[52,0,36,0],[53,0,37,0],[54,4,38,4,"removeSubscription"],[54,22,38,22,"removeSubscription"],[54,23,38,23,"subscription"],[54,35,38,35],[54,37,38,37],[55,6,39,8,"subscription"],[55,18,39,20],[55,19,39,21,"remove"],[55,25,39,27],[55,26,39,28],[55,27,39,29],[56,4,40,4],[57,4,41,4],[58,0,42,0],[59,0,43,0],[60,0,44,0],[61,0,45,0],[62,0,46,0],[63,0,47,0],[64,0,48,0],[65,0,49,0],[66,0,50,0],[67,4,51,4,"setUpdateInterval"],[67,21,51,21,"setUpdateInterval"],[67,22,51,22,"intervalMs"],[67,32,51,32],[67,34,51,34],[68,6,52,8],[68,10,52,12],[68,11,52,13],[68,15,52,17],[68,16,52,18,"_nativeModule"],[68,29,52,31],[68,30,52,32,"setUpdateInterval"],[68,47,52,49],[68,49,52,51],[69,8,53,12,"console"],[69,15,53,19],[69,16,53,20,"warn"],[69,20,53,24],[69,21,53,25],[69,78,53,82,"Platform"],[69,94,53,90],[69,95,53,90,"Platform"],[69,103,53,90],[69,104,53,91,"OS"],[69,106,53,93],[69,108,53,95],[69,109,53,96],[70,6,54,8],[70,7,54,9],[70,13,55,13],[71,8,56,12],[71,12,56,16],[71,13,56,17,"_nativeModule"],[71,26,56,30],[71,27,56,31,"setUpdateInterval"],[71,44,56,48],[71,45,56,49,"intervalMs"],[71,55,56,59],[71,56,56,60],[72,6,57,8],[73,4,58,4],[74,4,59,4],[75,0,60,0],[76,0,61,0],[77,0,62,0],[78,4,63,4],[78,10,63,10,"isAvailableAsync"],[78,26,63,26,"isAvailableAsync"],[78,27,63,26],[78,29,63,29],[79,6,64,8],[79,10,64,12],[79,11,64,13],[79,15,64,17],[79,16,64,18,"_nativeModule"],[79,29,64,31],[79,30,64,32,"isAvailableAsync"],[79,46,64,48],[79,48,64,50],[80,8,65,12],[80,15,65,19],[80,20,65,24],[81,6,66,8],[81,7,66,9],[81,13,67,13],[82,8,68,12],[82,15,68,19],[82,21,68,25],[82,25,68,29],[82,26,68,30,"_nativeModule"],[82,39,68,43],[82,40,68,44,"isAvailableAsync"],[82,56,68,60],[82,57,68,61],[82,58,68,62],[83,6,69,8],[84,4,70,4],[85,4,71,4],[86,0,72,0],[87,0,73,0],[88,4,74,4],[88,10,74,10,"getPermissionsAsync"],[88,29,74,29,"getPermissionsAsync"],[88,30,74,29],[88,32,74,32],[89,6,75,8],[89,10,75,12],[89,11,75,13],[89,15,75,17],[89,16,75,18,"_nativeModule"],[89,29,75,31],[89,30,75,32,"getPermissionsAsync"],[89,49,75,51],[89,51,75,53],[90,8,76,12],[90,15,76,19,"defaultPermissionsResponse"],[90,41,76,45],[91,6,77,8],[91,7,77,9],[91,13,78,13],[92,8,79,12],[92,15,79,19],[92,21,79,25],[92,25,79,29],[92,26,79,30,"_nativeModule"],[92,39,79,43],[92,40,79,44,"getPermissionsAsync"],[92,59,79,63],[92,60,79,64],[92,61,79,65],[93,6,80,8],[94,4,81,4],[95,4,82,4],[96,0,83,0],[97,0,84,0],[98,4,85,4],[98,10,85,10,"requestPermissionsAsync"],[98,33,85,33,"requestPermissionsAsync"],[98,34,85,33],[98,36,85,36],[99,6,86,8],[99,10,86,12],[99,11,86,13],[99,15,86,17],[99,16,86,18,"_nativeModule"],[99,29,86,31],[99,30,86,32,"requestPermissionsAsync"],[99,53,86,55],[99,55,86,57],[100,8,87,12],[100,15,87,19,"defaultPermissionsResponse"],[100,41,87,45],[101,6,88,8],[101,7,88,9],[101,13,89,13],[102,8,90,12],[102,15,90,19],[102,21,90,25],[102,25,90,29],[102,26,90,30,"_nativeModule"],[102,39,90,43],[102,40,90,44,"requestPermissionsAsync"],[102,63,90,67],[102,64,90,68],[102,65,90,69],[103,6,91,8],[104,4,92,4],[105,2,93,0],[106,2,94,0],[106,8,94,6,"defaultPermissionsResponse"],[106,34,94,32],[106,37,94,35],[107,4,95,4,"granted"],[107,11,95,11],[107,13,95,13],[107,17,95,17],[108,4,96,4,"expires"],[108,11,96,11],[108,13,96,13],[108,20,96,20],[109,4,97,4,"canAskAgain"],[109,15,97,15],[109,17,97,17],[109,21,97,21],[110,4,98,4,"status"],[110,10,98,10],[110,12,98,12,"PermissionStatus"],[110,28,98,28],[110,29,98,28,"PermissionStatus"],[110,45,98,28],[110,46,98,29,"GRANTED"],[111,2,99,0],[111,3,99,1],[112,0,99,2],[112,3]],"functionMap":{"names":["<global>","DeviceSensor","constructor","addListener","hasListeners","getListenerCount","removeAllListeners","removeSubscription","setUpdateInterval","isAvailableAsync","getPermissionsAsync","requestPermissionsAsync"],"mappings":"AAA;eCK;ICG;KDG;IEC;KFE;IGI;KHE;III;KJE;IKI;KLE;IMK;KNE;IOW;KPO;IQK;KRO;ISI;KTO;IUI;KVO;CDC"},"hasCjsExports":false},"type":"js/module"}]}